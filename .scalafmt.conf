version = "3.5.9"

# Indentation
continuationIndent {
  callSite = 2
  defnSite = 2
  ctorSite = 2
  extendSite = 1
  withSiteRelativeToExtends = 2
}

# Alignment
maxColumn = 100
assumeStandardLibraryStripMargin = true

align {
  preset = some
  openParenCallSite = false
  openParenDefnSite = false
  stripMargin = true
}

# Newlines
newlines {
  source = keep
  topLevelStatements = [before, after]
  topLevelStatementsMinBreaks = 1

  alwaysBeforeMultilineDef = true
  alwaysBeforeElseAfterCurlyIf = false

  beforeCurlyLambdaParams = multilineWithCaseOnly
  afterCurlyLambdaParams = squash

  implicitParamListModifierPrefer = before

  sometimesBeforeColonInMethodReturnType = false // If true, scalafmt may choose to put a newline before colon : at defs.
}

optIn.configStyleArguments = true

runner.dialect = scala213

runner.optimizer {
  forceConfigStyleOnOffset = 150
  forceConfigStyleMinArgCount = 2
}

danglingParentheses {
  defnSite = true
  callSite = true
  ctrlSite = false
  exclude = [class, trait]
}

# Rewrite Rules
rewrite.rules = [
  AvoidInfix,
  RedundantBraces,
  SortImports, // The imports are sorted by the groups: symbols, lower-case, upper-case.
  SortModifiers // Modifiers are sorted based on the given order.
]

rewrite.redundantBraces {
  generalExpressions = false
  ifElseExpressions = false
  methodBodies = true
  includeUnitMethods = false
  stringInterpolation = true
  parensForOneLineApply = true
  maxLines = 100
}

trailingCommas = never // Makes sure there are no trailing commas

# Comment Processing
comments {
  wrap = no
  wrapStandaloneSlcAsSlc = false
}

docstrings {
  style = SpaceAsterisk
  oneline = unfold
  wrap = no
  blankFirstLine = yes
}

# Spaces
spaces {
  beforeContextBoundColon = Always
  inImportCurlyBraces = false
  inParentheses = false
  neverAroundInfixTypes = []
  afterKeywordBeforeParen = true
  inByNameTypes = true
  afterSymbolicDefs = false
}

# Literals
literals {
  long = Upper
  float = Lower
  double = Lower
  hexPrefix = Lower
  hexDigits = Lower
  scientific = Lower
}

# XML

# Binpacking
binPack {
  literalArgumentLists = true
  parentConstructors = OnelineIfPrimaryOneline
}

# Classic select chains
includeCurlyBraceInSelectChains = true
includeNoParensInSelectChains = false
optIn.breakChainOnFirstMethodDot = true